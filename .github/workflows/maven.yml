# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
   push: 
   schedule: 
       - cron: '*/5 * * * *'

jobs:
  one:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Build with Maven
      env: 
        URL_1: ${{ secrets.URL_1 }}
        URL_2: ${{ secrets.URL_2 }}
        URL_3: ${{ secrets.URL_3 }}
      run: |
        cd bilibili
        sudo dpkg -i google-chrome-stable_current_amd64.deb
        sudo apt-get -f install
        unzip chromedriver_linux64.zip
        mvn compile exec:java -Dexec.mainClass="org.example.App" -Dexec.args="${URL_1} ${URL_2} ${URL_3}"
  
  two:
    needs: one
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Build with Maven
      env: 
        URL_4: ${{ secrets.URL_4 }}
        URL_5: ${{ secrets.URL_5 }}
        URL_6: ${{ secrets.URL_6 }}
      run: |
        cd bilibili
        sudo dpkg -i google-chrome-stable_current_amd64.deb
        sudo apt-get -f install
        unzip chromedriver_linux64.zip
        mvn compile exec:java -Dexec.mainClass="org.example.App" -Dexec.args="${URL_4} ${URL_5} ${URL_6}"
